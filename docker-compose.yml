version: '3'

services:
  web:
    container_name: nginx
    build:
      context: ./web
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - "8000:8000"
    environment:
      TZ: "Asia/Tokyo"
    volumes:
      - ./web/conf:/etc/nginx/conf.d
      - ./web/logs/nginx/:/var/log/nginx/
      - ./web/uwsgi_params:/etc/nginx/uwsgi_params
      - templates_volume:/usr/share/nginx/html/
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/usr/share/nginx/html/media
    networks:
      - django_net
    depends_on:
      - back

  back:
    container_name: django
    build:
      context: ./back
      dockerfile: ./Dockerfile
    env_file: .env
    command: 'sh scripts/start.sh'
    restart: always
    volumes:
      - ./back:/usr/src/app
      - templates_volume:/usr/src/app/templates
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - "8001"
    networks:
      - django_net
    depends_on:
      - db

  db:
    container_name: mysql
    build:
      context: ./db
      dockerfile: ./Dockerfile
      args:
        - MYSQL_DB_NAME=${MYSQL_DB_NAME}
        - MYSQL_USER_NAME=${MYSQL_USER_NAME}
        - MYSQL_USER_PASSWORD=${MYSQL_USER_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      - django_net
    volumes:
      - db_volume:/var/lib/mysql

networks:
  django_net:
    driver: bridge

volumes:
  django_statics:
    driver: local
  templates_volume:
  static_volume:
  media_volume:
  db_volume:
